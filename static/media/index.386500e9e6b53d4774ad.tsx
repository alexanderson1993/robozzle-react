import React,{Component}from"react";import ReactDOM from"react-dom";import GitHubForkRibbon from"react-github-fork-ribbon";import"./styles.css";import Boards from"./data";import Game from"./game";import{jsx as _jsx,jsxs as _jsxs}from"react/jsx-runtime";class App extends Component{constructor(props){super(props);// Initial state
this.state=void 0;this.handleLevelComplete=levelId=>{this.setState(prevState=>{const updatedCompletedLevels=new Set(prevState.completedLevels).add(levelId);localStorage.setItem('completedLevels',JSON.stringify(Array.from(updatedCompletedLevels)));return{completedLevels:updatedCompletedLevels};});};this.printProgress=()=>{setTimeout(()=>{const sortedLevels=Array.from(this.state.completedLevels).sort((a,b)=>a-b);window.alert("You've completed ".concat(sortedLevels.length," levels: \n").concat(sortedLevels));});};const completedLevels=new Set(JSON.parse(localStorage.getItem('completedLevels')||'[]'));this.state={selectedBoard:this.getSelectedBoardFromUrl()||285,dragging:null,completedLevels:completedLevels};}getSelectedBoardFromUrl(){const searchParams=new URLSearchParams(window.location.search);const level=parseInt(searchParams.get('level'),10);if(isNaN(level)){return-1;}if(!Boards.find(b=>b.Id===level)){return-1;}return level;}render(){const{dragging,selectedBoard,completedLevels}=this.state;return/*#__PURE__*/_jsxs("div",{className:"App ".concat(dragging?"dragging":""),children:[/*#__PURE__*/_jsx(GitHubForkRibbon,{href:"//github.com/alexanderson1993/robozzle-react",target:"_blank",position:"left-bottom",color:"black",children:"Fork me on GitHub"}),/*#__PURE__*/_jsxs("div",{className:"boards",children:[/*#__PURE__*/_jsx("h1",{onClick:this.printProgress,children:"Robozzle-React"}),Boards.map(d=>/*#__PURE__*/_jsx("p",{className:"".concat(selectedBoard===d.Id?"selected":""),onClick:()=>{this.setState({selectedBoard:d.Id});const url=new URL(window.location.href);url.searchParams.set("level","".concat(d.Id));window.history.pushState({path:url.toString()},'',url.toString());},children:completedLevels.has(d.Id)?"\u2705 ".concat(d.Title):"\u2B1C ".concat(d.Title)},"board-".concat(d.Id)))]}),selectedBoard&&/*#__PURE__*/_jsx(Game,{setDragging:which=>this.setState({dragging:which}),board:Boards.find(b=>b.Id===selectedBoard),onLevelComplete:()=>this.handleLevelComplete(selectedBoard)},selectedBoard)]});}}const rootElement=document.getElementById("root");ReactDOM.render(/*#__PURE__*/_jsx(App,{}),rootElement);